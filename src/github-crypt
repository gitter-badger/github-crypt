#!/usr/bin/env bash

case "${1}" in
  decrypt)
    IN=
    KEY=~/.ssh/id_rsa
    OUT=

    while (( "$#" )); do
      case "${2}" in
        --*=*|-*=*) opt=(${2/=/ }) && shift ;;
        *)
          case "${3}" in
            --*|-*) opt=(${2} '') && shift ;;
            *) opt=(${2} ${3}) && shift && shift ;;
          esac
        ;;
      esac

      case "${opt[0]}" in
        --in|-i) IN="${opt[1]}" ;;
        --key|-k) KEY="${opt[1]}" ;;
        --out|-o) OUT="${opt[1]}" ;;
      esac
    done

    test -z "${KEY}" && read -p 'Enter path for private SSH key (e.g. ~/.ssh/id_rsa): ' KEY
    test -z "${IN}" && read -p 'Enter path for in-file (e.g. ~/file.enc): ' IN
    test -z "${OUT}" && read -p 'Enter path for out-file (e.g. ~/file): ' OUT

    bash -c "openssl rsautl -decrypt -inkey ${KEY} -in ${IN} -out ${OUT} 2>/dev/null"

    test $? -ne 0 && echo 'Decrypt failed' && exit 1
  ;;

  encrypt)
    IN=
    KEY='last'
    OUT=
    UPLOAD='n'
    USERNAME=

    while (( "$#" )); do
      case "${2}" in
        --*=*|-*=*) opt=(${2/=/ }) && shift ;;
        *)
          case "${3}" in
            --*|-*) opt=(${2} '') && shift ;;
            *) opt=(${2} ${3}) && shift && shift ;;
          esac
        ;;
      esac

      case "${opt[0]}" in
        --key|-k) KEY="${opt[1]}" ;;
        --in|-i) IN="${opt[1]}" ;;
        --out|-o) OUT="${opt[1]}" ;;
        --upload|-l) UPLOAD="y" ;;
        --username|-u) USERNAME="${opt[1]}" ;;
      esac
    done

    test -z "${USERNAME}" && read -e -p 'Enter GitHub username (e.g. rockymadden): ' USERNAME
    test -z "${KEY}" && read -e -p 'Enter index for GitHub keys (e.g. 1): ' KEY
    test -z "${IN}" && read -e -p 'Enter path for in-file (e.g. ~/file): ' IN
    test -z "${OUT}" && read -e -p 'Enter path for out-file (e.g. ~/file.enc): ' OUT
    test -z "${UPLOAD}" && read -e -p 'Upload (y|n): ' UPLOAD

    if [ "${KEY}" == 'last' ]; then
      wget https://github.com/${USERNAME}.keys --quiet -qO- 2>/dev/null | tail -n 1 > /tmp/${USERNAME}.pub
    else
      wget https://github.com/${USERNAME}.keys --quiet -qO- 2>/dev/null | awk "NR==${KEY}" > /tmp/${USERNAME}.pub
    fi

    chmod 600 /tmp/${USERNAME}.pub && \
    ssh-keygen -f /tmp/${USERNAME}.pub -e -m PKCS8 > /tmp/${USERNAME}.pub.pkcs8 && \
    chmod 600 /tmp/${USERNAME}.pub.pkcs8 && \
    bash -c "openssl rsautl -encrypt -pubin -inkey /tmp/${USERNAME}.pub.pkcs8 -ssl -in ${IN} -out ${OUT} 2>/dev/null"

    test $? -ne 0 && echo 'Encrypt failed' && exit 1

    test "${UPLOAD}" = 'y' && bash -c "open -a CloudApp ${OUT}"
  ;;



  --help)
    a=(${0//\// })
    bin=${a[${#a[@]}-1]}

    echo 'Usage:'
    echo "  ${bin} encrypt [--username|-u <username>] [--key|-k <index>] [--in|-i <path>] [--out|-o <path>] [--upload|-l]"
    echo "  ${bin} decrypt [--key|-k <path>] [--in|-i <path>] [--out|-o <path>]"
    echo
    echo "Crypto Commands:"
    echo "  encrypt     Encrypt a file so that only the specified GitHub user can decrypt"
    echo "  decrypt     Decrypt a file which another user encrypted specifically for you"
  ;;

  --version) echo 'v0.2.0' ;;

  *) ${0} --help && exit 1 ;;
esac

exit 0
