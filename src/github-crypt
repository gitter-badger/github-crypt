#!/usr/bin/env bash

case "${1}" in
  decrypt)
    IN=
    KEY=~/.ssh/id_rsa
    OUT=

    while (( "$#" )); do
      case "${2}" in
        --in|-i) shift && IN="${2}" ;;
        --key|-k) shift && KEY="${2}" ;;
        --out|-o) shift && OUT="${2}" ;;
      esac

      shift
    done

    test -z "${KEY}" && read -p 'Enter path for SSH private key: ' KEY
    test -z "${IN}" && read -p 'Enter path for in-file: ' IN
    test -z "${OUT}" && read -p 'Enter path for out-file: ' OUT

    bash -c "openssl rsautl -decrypt -inkey ${KEY} -in ${IN} -out ${OUT} 2>/dev/null"

    case "$?" in
      0) exit 0 ;;
      *) echo 'Decrypt failed'; exit 1 ;;
    esac
  ;;

  encrypt)
    IN=
    KEY='tail'
    OUT=
    USERNAME=

    while (( "$#" )); do
      case "${2}" in
        --key|-k) shift && KEY="${2}" ;;
        --in|-i) shift && IN="${2}" ;;
        --out|-o) shift && OUT="${2}" ;;
        --username|-u) shift && USERNAME="${2}" ;;
      esac

      shift
    done

    test -z "${USERNAME}" && read -e -p 'Enter GitHub username: ' USERNAME
    test -z "${KEY}" && read -e -p 'Enter index for GitHub keys: ' KEY
    test -z "${IN}" && read -e -p 'Enter path for in-file: ' && IN="${REPLY}"
    test -z "${OUT}" && read -e -p 'Enter path for out-file: ' && OUT="${REPLY}"

    if [ "${KEY}" == 'tail' ]; then
      wget https://github.com/${USERNAME}.keys --quiet -qO- 2>/dev/null | tail -n 1 > /tmp/${USERNAME}.pub
    else
      wget https://github.com/${USERNAME}.keys --quiet -qO- 2>/dev/null | awk "NR==${KEY}" > /tmp/${USERNAME}.pub
    fi

    chmod 600 /tmp/${USERNAME}.pub && \
    ssh-keygen -f /tmp/${USERNAME}.pub -e -m PKCS8 > /tmp/${USERNAME}.pub.pkcs8 && \
    chmod 600 /tmp/${USERNAME}.pub.pkcs8 && \
    bash -c "openssl rsautl -encrypt -pubin -inkey /tmp/${USERNAME}.pub.pkcs8 -ssl -in ${IN} -out ${OUT} 2>/dev/null"

    case "$?" in
      0) exit 0 ;;
      *) echo 'Encrypt failed'; exit 1 ;;
    esac
  ;;

  *)
    echo 'Usage:'
    echo "  github-crypt encrypt [--username|-u <username>] [--key|-k <index>] [--in|-i <path>] [--out|-o <path>]"
    echo "  github-crypt decrypt [--key|-k <path>] [--in|-i <path>] [--out|-o <path>]"
    exit 1
  ;;
esac
